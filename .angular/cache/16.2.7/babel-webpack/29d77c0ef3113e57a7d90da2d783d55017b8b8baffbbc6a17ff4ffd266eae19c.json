{"ast":null,"code":"import { Flight } from '../flight'; // Importa la clase Flight\nimport { map, switchMap } from 'rxjs/operators'; // Importa operadores de RxJS\nimport { of } from 'rxjs'; // Importa la función 'of' de RxJS\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../flight.service\";\nexport class FlightEditComponent {\n  constructor(route,\n  // Inyección del servicio ActivatedRoute\n  router,\n  // Inyección del servicio Router\n  flightService // Inyección de un servicio personalizado para gestionar vuelos\n  ) {\n    this.route = route;\n    this.router = router;\n    this.flightService = flightService;\n    this.feedback = {}; // Se utiliza para proporcionar retroalimentación al usuario\n  }\n\n  ngOnInit() {\n    this.route.params.pipe(map(p => p.id),\n    // Extrae el ID de los parámetros de la ruta\n    switchMap(id => {\n      if (id === 'new') {\n        return of(new Flight());\n      } // Si el ID es 'new', crea un nuevo objeto Flight\n      return this.flightService.findById(id); // Si es un ID válido, obtiene detalles del vuelo a través del servicio\n    })).subscribe(flight => {\n      this.flight = flight; // Almacena la información del vuelo\n      this.feedback = {}; // Limpia cualquier mensaje de retroalimentación\n    }, err => {\n      this.feedback = {\n        type: 'warning',\n        message: 'Error loading'\n      }; // En caso de error, muestra un mensaje de advertencia\n    });\n  }\n\n  save() {\n    this.flightService.save(this.flight).subscribe(\n    // Utiliza el servicio para guardar el vuelo\n    // Utiliza el servicio para guardar el vuelo\n    flight => {\n      this.flight = flight; // Almacena los cambios realizados en el vuelo\n      this.feedback = {\n        type: 'success',\n        message: 'Save was successful!'\n      }; // Muestra un mensaje de éxito\n      setTimeout(() => {\n        this.router.navigate(['/flights']); // Redirige al usuario a la lista de vuelos después de un breve retraso\n      }, 1000);\n    }, err => {\n      this.feedback = {\n        type: 'warning',\n        message: 'Error saving'\n      }; // En caso de error al guardar, muestra un mensaje de advertencia\n    });\n  }\n\n  cancel() {\n    this.router.navigate(['/flights']); // Redirige al usuario de vuelta a la lista de vuelos\n  }\n  static #_ = this.ɵfac = function FlightEditComponent_Factory(t) {\n    return new (t || FlightEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FlightService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FlightEditComponent,\n    selectors: [[\"app-flight-edit\"]],\n    decls: 0,\n    vars: 0,\n    template: function FlightEditComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["Flight","map","switchMap","of","FlightEditComponent","constructor","route","router","flightService","feedback","ngOnInit","params","pipe","p","id","findById","subscribe","flight","err","type","message","save","setTimeout","navigate","cancel","_","i0","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","FlightService","_2","selectors","decls","vars","template","FlightEditComponent_Template","rf","ctx","encapsulation"],"sources":["C:\\Users\\SAMBRA\\Downloads\\clonar\\angular-crud\\demo\\src\\app\\flight\\flight-edit\\flight-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core'; // Importa las clases y módulos necesarios de Angular\r\nimport { ActivatedRoute } from '@angular/router'; // Para obtener información sobre la ruta activa\r\nimport { Router } from '@angular/router'; // Para navegar entre rutas\r\nimport { FlightService } from '../flight.service'; // Importa un servicio para gestionar vuelos\r\nimport { Flight } from '../flight'; // Importa la clase Flight\r\nimport { map, switchMap } from 'rxjs/operators'; // Importa operadores de RxJS\r\nimport { of } from 'rxjs'; // Importa la función 'of' de RxJS\r\n\r\n@Component({\r\n  selector: 'app-flight-edit', // Selector del componente\r\n  templateUrl: './flight-edit.component.html' // Ruta de la plantilla HTML asociada al componente\r\n})\r\nexport class FlightEditComponent implements OnInit { // Definición del componente y su implementación de OnInit\r\n\r\n  id!: string; // Almacena el identificador del vuelo\r\n  flight!: Flight; // Almacena información sobre el vuelo actual\r\n  feedback: any = {}; // Se utiliza para proporcionar retroalimentación al usuario\r\n\r\n  constructor(\r\n    private route: ActivatedRoute, // Inyección del servicio ActivatedRoute\r\n    private router: Router, // Inyección del servicio Router\r\n    private flightService: FlightService // Inyección de un servicio personalizado para gestionar vuelos\r\n  ) {}\r\n\r\n  ngOnInit() { // Método que se ejecuta al iniciar el componente\r\n    this\r\n      .route\r\n      .params\r\n      .pipe(\r\n        map(p => p.id), // Extrae el ID de los parámetros de la ruta\r\n        switchMap(id => {\r\n          if (id === 'new') { return of(new Flight()); } // Si el ID es 'new', crea un nuevo objeto Flight\r\n          return this.flightService.findById(id); // Si es un ID válido, obtiene detalles del vuelo a través del servicio\r\n        })\r\n      )\r\n      .subscribe(flight => { // Suscribe a la respuesta de la operación anterior\r\n          this.flight = flight; // Almacena la información del vuelo\r\n          this.feedback = {}; // Limpia cualquier mensaje de retroalimentación\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Error loading'}; // En caso de error, muestra un mensaje de advertencia\r\n        }\r\n      );\r\n  }\r\n\r\n  save() { // Método para guardar los cambios en la información del vuelo\r\n    this.flightService.save(this.flight).subscribe( // Utiliza el servicio para guardar el vuelo\r\n      flight => {\r\n        this.flight = flight; // Almacena los cambios realizados en el vuelo\r\n        this.feedback = {type: 'success', message: 'Save was successful!'}; // Muestra un mensaje de éxito\r\n        setTimeout(() => {\r\n          this.router.navigate(['/flights']); // Redirige al usuario a la lista de vuelos después de un breve retraso\r\n        }, 1000);\r\n      },\r\n      err => {\r\n        this.feedback = {type: 'warning', message: 'Error saving'}; // En caso de error al guardar, muestra un mensaje de advertencia\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel() { // Método para cancelar la edición\r\n    this.router.navigate(['/flights']); // Redirige al usuario de vuelta a la lista de vuelos\r\n  }\r\n}\r\n"],"mappings":"AAIA,SAASA,MAAM,QAAQ,WAAW,CAAC,CAAC;AACpC,SAASC,GAAG,EAAEC,SAAS,QAAQ,gBAAgB,CAAC,CAAC;AACjD,SAASC,EAAE,QAAQ,MAAM,CAAC,CAAC;;;;AAM3B,OAAM,MAAOC,mBAAmB;EAM9BC,YACUC,KAAqB;EAAE;EACvBC,MAAc;EAAE;EAChBC,aAA4B,CAAC;EAAA,E;IAF7B,KAAAF,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,aAAa,GAAbA,aAAa;IALvB,KAAAC,QAAQ,GAAQ,EAAE,CAAC,CAAC;EAMjB;;EAEHC,QAAQA,CAAA;IACN,IAAI,CACDJ,KAAK,CACLK,MAAM,CACNC,IAAI,CACHX,GAAG,CAACY,CAAC,IAAIA,CAAC,CAACC,EAAE,CAAC;IAAE;IAChBZ,SAAS,CAACY,EAAE,IAAG;MACb,IAAIA,EAAE,KAAK,KAAK,EAAE;QAAE,OAAOX,EAAE,CAAC,IAAIH,MAAM,EAAE,CAAC;OAAG,CAAC;MAC/C,OAAO,IAAI,CAACQ,aAAa,CAACO,QAAQ,CAACD,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,CACH,CACAE,SAAS,CAACC,MAAM,IAAG;MAChB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAAC,CAAC;MACtB,IAAI,CAACR,QAAQ,GAAG,EAAE,CAAC,CAAC;IACtB,CAAC,EACDS,GAAG,IAAG;MACJ,IAAI,CAACT,QAAQ,GAAG;QAACU,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAe,CAAC,CAAC,CAAC;IAC/D,CAAC,CACF;EACL;;EAEAC,IAAIA,CAAA;IACF,IAAI,CAACb,aAAa,CAACa,IAAI,CAAC,IAAI,CAACJ,MAAM,CAAC,CAACD,SAAS;IAAE;IAC9C;IAAAC,MAAM,IAAG;MACP,IAAI,CAACA,MAAM,GAAGA,MAAM,CAAC,CAAC;MACtB,IAAI,CAACR,QAAQ,GAAG;QAACU,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAsB,CAAC,CAAC,CAAC;MACpEE,UAAU,CAAC,MAAK;QACd,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;MACtC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,EACDL,GAAG,IAAG;MACJ,IAAI,CAACT,QAAQ,GAAG;QAACU,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAc,CAAC,CAAC,CAAC;IAC9D,CAAC,CACF;EACH;;EAEAI,MAAMA,CAAA;IACJ,IAAI,CAACjB,MAAM,CAACgB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;EACtC;EAAC,QAAAE,CAAA,G;qBAlDUrB,mBAAmB,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAE,MAAA,GAAAJ,EAAA,CAAAC,iBAAA,CAAAI,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnB7B,mBAAmB;IAAA8B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAAC,aAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}