{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(formBuilder, router) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.loginForm = this.formBuilder.group({\n      fullName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      // Procesar los datos de inicio de sesión (por ejemplo, enviar al servidor).\n      // Redireccionar al usuario a la página de inicio y mostrar un mensaje de éxito.\n      this.router.navigate(['/home']);\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 18,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"fullName\"], [\"type\", \"text\", \"id\", \"fullName\", \"formControlName\", \"fullName\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"routerLink\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\", 1);\n        i0.ɵɵtext(4, \"Nombre Completo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\", 3);\n        i0.ɵɵtext(8, \"Correo Electr\\u00F3nico\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\")(11, \"label\", 5);\n        i0.ɵɵtext(12, \"Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 7);\n        i0.ɵɵtext(15, \"Iniciar Sesi\\u00F3n\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"a\", 8);\n        i0.ɵɵtext(17, \"Iniciar Sesi\\u00F3n\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"routerLink\", \"/login\");\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","LoginComponent","constructor","formBuilder","router","loginForm","group","fullName","required","email","password","onSubmit","valid","navigate","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\SAMBRA\\Downloads\\clonar\\angular-crud\\demo\\src\\app\\login\\login.component.ts","C:\\Users\\SAMBRA\\Downloads\\clonar\\angular-crud\\demo\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: 'login.component.html',\n  styleUrls: ['login.component.css']\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private router: Router) {\n    this.loginForm = this.formBuilder.group({\n      fullName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      // Procesar los datos de inicio de sesión (por ejemplo, enviar al servidor).\n      // Redireccionar al usuario a la página de inicio y mostrar un mensaje de éxito.\n      this.router.navigate(['/home']);\n    }\n  }\n}\n","<div>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div>\n        <label for=\"fullName\">Nombre Completo</label>\n        <input type=\"text\" id=\"fullName\" formControlName=\"fullName\">\n      </div>\n      <div>\n        <label for=\"email\">Correo Electrónico</label>\n        <input type=\"email\" id=\"email\" formControlName=\"email\">\n      </div>\n      <div>\n        <label for=\"password\">Contraseña</label>\n        <input type=\"password\" id=\"password\" formControlName=\"password\">\n      </div>\n      <button type=\"submit\" [disabled]=\"!loginForm.valid\">Iniciar Sesión</button>\n    </form>\n  </div>\n  <a [routerLink]=\"'/login'\">Iniciar Sesión</a>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAQnE,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAC1D,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MACnCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACQ,QAAQ;KACnC,CAAC;EACJ;EAEAG,QAAQA,CAAA;IACN,IAAI,IAAI,CAACN,SAAS,CAACO,KAAK,EAAE;MACxB;MACA;MACA,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;EAEnC;EAAC,QAAAC,CAAA,G;qBAjBUb,cAAc,EAAAc,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdpB,cAAc;IAAAqB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT3Bb,EAAA,CAAAe,cAAA,UAAK;QAC6Bf,EAAA,CAAAgB,UAAA,sBAAAC,iDAAA;UAAA,OAAYH,GAAA,CAAAlB,QAAA,EAAU;QAAA,EAAC;QACnDI,EAAA,CAAAe,cAAA,UAAK;QACmBf,EAAA,CAAAkB,MAAA,sBAAe;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAC7CnB,EAAA,CAAAoB,SAAA,eAA4D;QAC9DpB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAe,cAAA,UAAK;QACgBf,EAAA,CAAAkB,MAAA,8BAAkB;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAC7CnB,EAAA,CAAAoB,SAAA,eAAuD;QACzDpB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAe,cAAA,WAAK;QACmBf,EAAA,CAAAkB,MAAA,uBAAU;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QACxCnB,EAAA,CAAAoB,SAAA,gBAAgE;QAClEpB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAe,cAAA,iBAAoD;QAAAf,EAAA,CAAAkB,MAAA,2BAAc;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;QAG/EnB,EAAA,CAAAe,cAAA,YAA2B;QAAAf,EAAA,CAAAkB,MAAA,2BAAc;QAAAlB,EAAA,CAAAmB,YAAA,EAAI;;;QAhBrCnB,EAAA,CAAAqB,SAAA,GAAuB;QAAvBrB,EAAA,CAAAsB,UAAA,cAAAR,GAAA,CAAAxB,SAAA,CAAuB;QAaLU,EAAA,CAAAqB,SAAA,IAA6B;QAA7BrB,EAAA,CAAAsB,UAAA,cAAAR,GAAA,CAAAxB,SAAA,CAAAO,KAAA,CAA6B;QAGpDG,EAAA,CAAAqB,SAAA,GAAuB;QAAvBrB,EAAA,CAAAsB,UAAA,wBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}