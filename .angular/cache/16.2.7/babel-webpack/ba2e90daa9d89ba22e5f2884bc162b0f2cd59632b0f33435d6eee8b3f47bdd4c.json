{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Flight } from '../flight';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nlet FlightEditComponent = class FlightEditComponent {\n  constructor(route, router, flightService) {\n    this.route = route;\n    this.router = router;\n    this.flightService = flightService;\n    this.feedback = {};\n  }\n  ngOnInit() {\n    this.route.params.pipe(map(p => p.id), switchMap(id => {\n      if (id === 'new') {\n        return of(new Flight());\n      }\n      return this.flightService.findById(id);\n    })).subscribe(flight => {\n      this.flight = flight;\n      this.feedback = {};\n    }, err => {\n      this.feedback = {\n        type: 'warning',\n        message: 'Error loading'\n      };\n    });\n  }\n  save() {\n    this.flightService.save(this.flight).subscribe(flight => {\n      this.flight = flight;\n      this.feedback = {\n        type: 'success',\n        message: 'Save was successful!'\n      };\n      setTimeout(() => {\n        this.router.navigate(['/flights']);\n      }, 1000);\n    }, err => {\n      this.feedback = {\n        type: 'warning',\n        message: 'Error saving'\n      };\n    });\n  }\n  cancel() {\n    this.router.navigate(['/flights']);\n  }\n};\nFlightEditComponent = __decorate([Component({\n  selector: 'app-flight-edit',\n  templateUrl: './flight-edit.component.html'\n})], FlightEditComponent);\nexport { FlightEditComponent };","map":{"version":3,"names":["Component","Flight","map","switchMap","of","FlightEditComponent","constructor","route","router","flightService","feedback","ngOnInit","params","pipe","p","id","findById","subscribe","flight","err","type","message","save","setTimeout","navigate","cancel","__decorate","selector","templateUrl"],"sources":["C:\\Users\\SAMBRA\\Downloads\\clonar\\angular-crud\\demo\\src\\app\\flight\\flight-edit\\flight-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { FlightService } from '../flight.service';\r\nimport { Flight } from '../flight';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-flight-edit',\r\n  templateUrl: './flight-edit.component.html'\r\n})\r\nexport class FlightEditComponent implements OnInit {\r\n\r\n  id!: string;\r\n  flight!: Flight;\r\n  feedback: any = {};\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private flightService: FlightService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this\r\n      .route\r\n      .params\r\n      .pipe(\r\n        map(p => p.id),\r\n        switchMap(id => {\r\n          if (id === 'new') { return of(new Flight()); }\r\n          return this.flightService.findById(id);\r\n        })\r\n      )\r\n      .subscribe(flight => {\r\n          this.flight = flight;\r\n          this.feedback = {};\r\n        },\r\n        err => {\r\n          this.feedback = {type: 'warning', message: 'Error loading'};\r\n        }\r\n      );\r\n  }\r\n\r\n  save() {\r\n    this.flightService.save(this.flight).subscribe(\r\n      flight => {\r\n        this.flight = flight;\r\n        this.feedback = {type: 'success', message: 'Save was successful!'};\r\n        setTimeout(() => {\r\n          this.router.navigate(['/flights']);\r\n        }, 1000);\r\n      },\r\n      err => {\r\n        this.feedback = {type: 'warning', message: 'Error saving'};\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/flights']);\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,GAAG,EAAEC,SAAS,QAAQ,gBAAgB;AAC/C,SAASC,EAAE,QAAQ,MAAM;AAMlB,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAM9BC,YACUC,KAAqB,EACrBC,MAAc,EACdC,aAA4B;IAF5B,KAAAF,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,aAAa,GAAbA,aAAa;IALvB,KAAAC,QAAQ,GAAQ,EAAE;EAMlB;EAEAC,QAAQA,CAAA;IACN,IAAI,CACDJ,KAAK,CACLK,MAAM,CACNC,IAAI,CACHX,GAAG,CAACY,CAAC,IAAIA,CAAC,CAACC,EAAE,CAAC,EACdZ,SAAS,CAACY,EAAE,IAAG;MACb,IAAIA,EAAE,KAAK,KAAK,EAAE;QAAE,OAAOX,EAAE,CAAC,IAAIH,MAAM,EAAE,CAAC;;MAC3C,OAAO,IAAI,CAACQ,aAAa,CAACO,QAAQ,CAACD,EAAE,CAAC;IACxC,CAAC,CAAC,CACH,CACAE,SAAS,CAACC,MAAM,IAAG;MAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACR,QAAQ,GAAG,EAAE;IACpB,CAAC,EACDS,GAAG,IAAG;MACJ,IAAI,CAACT,QAAQ,GAAG;QAACU,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAe,CAAC;IAC7D,CAAC,CACF;EACL;EAEAC,IAAIA,CAAA;IACF,IAAI,CAACb,aAAa,CAACa,IAAI,CAAC,IAAI,CAACJ,MAAM,CAAC,CAACD,SAAS,CAC5CC,MAAM,IAAG;MACP,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACR,QAAQ,GAAG;QAACU,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAsB,CAAC;MAClEE,UAAU,CAAC,MAAK;QACd,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;MACpC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,EACDL,GAAG,IAAG;MACJ,IAAI,CAACT,QAAQ,GAAG;QAACU,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAc,CAAC;IAC5D,CAAC,CACF;EACH;EAEAI,MAAMA,CAAA;IACJ,IAAI,CAACjB,MAAM,CAACgB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;EACpC;CACD;AAnDYnB,mBAAmB,GAAAqB,UAAA,EAJ/B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE;CACd,CAAC,C,EACWvB,mBAAmB,CAmD/B;SAnDYA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}